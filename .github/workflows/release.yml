name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: sql-cli-linux-x64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: sql-cli-windows-x64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: sql-cli-macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: sql-cli-macos-arm64
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    
    - name: Build Release
      working-directory: ./sql-cli
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Create artifact directory
      run: mkdir -p artifacts
    
    - name: Copy binary (Unix)
      if: matrix.os != 'windows-latest'
      run: cp sql-cli/target/${{ matrix.target }}/release/sql-cli artifacts/${{ matrix.artifact }}
    
    - name: Copy binary (Windows)
      if: matrix.os == 'windows-latest'
      run: cp sql-cli/target/${{ matrix.target }}/release/sql-cli.exe artifacts/${{ matrix.artifact }}.exe
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact }}
        path: artifacts/*
  
  release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}